// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace tp4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241122091942_identity")]
    partial class identity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tp4.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("MembershipTypeId")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MembershipTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            MembershipTypeId = 1,
                            age = 12,
                            email = "jhbjfdhbvj",
                            name = "maram"
                        },
                        new
                        {
                            id = 2,
                            MembershipTypeId = 2,
                            age = 12,
                            email = "jhbjfdhbvj",
                            name = "mam"
                        },
                        new
                        {
                            id = 3,
                            MembershipTypeId = 3,
                            age = 12,
                            email = "jhbjfdhbvj",
                            name = "marm"
                        });
                });

            modelBuilder.Entity("tp4.Models.Genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Romance"
                        },
                        new
                        {
                            id = 2,
                            Name = "Thriller"
                        },
                        new
                        {
                            id = 3,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("tp4.Models.MembershipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SignUpfee")
                        .HasColumnType("real");

                    b.Property<float>("discountRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DurationInMonth = 3,
                            Name = "3 months",
                            SignUpfee = 4f,
                            discountRate = 30f
                        },
                        new
                        {
                            Id = 2,
                            DurationInMonth = 3,
                            Name = "9 months",
                            SignUpfee = 455f,
                            discountRate = 30f
                        },
                        new
                        {
                            Id = 3,
                            DurationInMonth = 3,
                            Name = "premium",
                            SignUpfee = 43f,
                            discountRate = 30f
                        });
                });

            modelBuilder.Entity("tp4.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DateAdded = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 1,
                            PhotoPath = "",
                            name = "Inception"
                        },
                        new
                        {
                            id = 2,
                            DateAdded = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 2,
                            PhotoPath = "",
                            name = "The Hangover"
                        },
                        new
                        {
                            id = 3,
                            DateAdded = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 3,
                            PhotoPath = "",
                            name = "The Shawshank Redemption"
                        });
                });

            modelBuilder.Entity("tp4.Models.Customer", b =>
                {
                    b.HasOne("tp4.Models.MembershipType", "membershiptype")
                        .WithMany("Customers")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("membershiptype");
                });

            modelBuilder.Entity("tp4.Models.Movie", b =>
                {
                    b.HasOne("tp4.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("tp4.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("tp4.Models.MembershipType", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
